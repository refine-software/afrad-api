{
    "swagger": "2.0",
    "info": {
        "description": "Afrad is a RESTful API for a clothing e-commerce platform.",
        "title": "Afrad API",
        "contact": {
            "name": "Ali Jabar",
            "email": "ali.jabar@refinesoftware.net"
        },
        "license": {
            "name": "MIT License",
            "url": "https://img.shields.io/badge/License-MIT-yellow.svg"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Logs in a user using email and password. Returns an access token and user data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Email/Password Login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "loginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.loginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login with access token and user info",
                        "schema": {
                            "$ref": "#/definitions/server.loginResDocs"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials or unverified account",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/password-reset": {
            "post": {
                "description": "Generates and sends a password reset OTP to the user's email if the account exists and is verified. Limits OTP requests per day.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Request Password Reset OTP",
                "parameters": [
                    {
                        "description": "User Email",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.passwordResetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "check your email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request or user not verified or email not found",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "OTP request limit exceeded",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/password-reset/confirm": {
            "post": {
                "description": "Confirms password reset by verifying the OTP and updating the user's password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Confirm Password Reset",
                "parameters": [
                    {
                        "description": "New password, OTP, and Email",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.PasswordResetConfirmReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "password changed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request, wrong OTP, or missing fields",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "OTP expired or unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "RefreshTokenCookie": []
                    }
                ],
                "description": "Rotates a valid refresh token and returns a new access token. Requires refresh token in cookie.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Tokens",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.refreshTokenReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New access token",
                        "schema": {
                            "$ref": "#/definitions/server.refreshTokenRes"
                        }
                    },
                    "400": {
                        "description": "Bad request or missing refresh_token cookie",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Invalid, expired, or revoked session",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user with optional profile image and sends a verification OTP via email.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "First Name",
                        "name": "firstName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Last Name",
                        "name": "lastName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Phone Number",
                        "name": "phoneNumber",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Optional Profile Image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "user created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/resend-verification": {
            "post": {
                "description": "Resends an OTP code to a user's email if the account is not yet verified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Resend Verification OTP",
                "parameters": [
                    {
                        "description": "Email for which to resend OTP",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.resendVerificationOTPReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "check your email for otp",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid input, or already verified",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "403": {
                        "description": "OTP request limit reached",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/auth/verify-account": {
            "post": {
                "description": "Verifies a user's account using email and OTP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify Account",
                "parameters": [
                    {
                        "description": "Verification Data",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.verifyAccountReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "your account has been verified",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid OTP",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "OTP expired",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/oauth/google/callback": {
            "get": {
                "description": "Handles the Google OAuth callback, authenticates the user, and returns a JWT access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "Google OAuth Callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OAuth authorization code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OAuth state (if used)",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login with JWT token and user data",
                        "schema": {
                            "$ref": "#/definitions/server.loginResDocs"
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid input",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid OAuth token",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/oauth/google/login": {
            "get": {
                "description": "Redirects the user to Google's OAuth 2.0 login screen.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OAuth"
                ],
                "summary": "Start Google OAuth Login",
                "responses": {
                    "302": {
                        "description": "Redirect to Google",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logs out the currently authenticated user by revoking the session and clearing the refresh token cookie.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Logout",
                "responses": {
                    "204": {
                        "description": "Successfully logged out"
                    },
                    "400": {
                        "description": "Missing refresh token or invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid session",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        },
        "/user/logout/all": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Revokes all active sessions for the authenticated user across all devices.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Logout from All Sessions",
                "responses": {
                    "204": {
                        "description": "Successfully logged out from all sessions"
                    },
                    "401": {
                        "description": "Unauthorized or invalid token",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Role": {
            "type": "string",
            "enum": [
                "admin",
                "user"
            ],
            "x-enum-varnames": [
                "RoleAdmin",
                "RoleUser"
            ]
        },
        "server.PasswordResetConfirmReq": {
            "type": "object",
            "required": [
                "email",
                "newPassword",
                "otp"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "server.loginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "server.loginResDocs": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/server.userDocs"
                }
            }
        },
        "server.passwordResetReq": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "server.refreshTokenReq": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer"
                }
            }
        },
        "server.refreshTokenRes": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "server.resendVerificationOTPReq": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "server.userDocs": {
            "type": "object",
            "properties": {
                "PhoneNumber": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                }
            }
        },
        "server.verifyAccountReq": {
            "type": "object",
            "required": [
                "email",
                "otp"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "utils.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer {your_jwt_token}\" to authenticate.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}